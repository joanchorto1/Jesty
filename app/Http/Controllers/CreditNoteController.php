<?php


namespace App\Http\Controllers;

use App\Models\CreditNote;
use App\Models\CreditNoteItem;
use App\Models\Expense;
use App\Models\Invoice;
use App\Models\InvoiceItem;
use App\Models\PaymentMethod;
use App\Models\ExpenseCategory;
use App\Models\Product;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Auth;
use Inertia\Inertia;

class CreditNoteController extends Controller
{
    // Mostrar les notes de crèdit d'una factura
    public function show(Invoice $invoice)
    {
        $creditNotes = CreditNote::where('invoice_id', $invoice->id)->get();
        return Inertia::render('Invoices/Show', [
            'invoice' => $invoice,
            'creditNotes' => $creditNotes
        ]);
    }

    // Crear una nova nota de crèdit
    public function create(Invoice $invoice)
    {
        // Aquí podem obtenir els mètodes de pagament i les categories d'expenses
        $paymentMethods = PaymentMethod::all();
        $expenseCategories = ExpenseCategory::all();

        return Inertia::render('CreditNotes/Create', [
            'invoice' => $invoice,
            'paymentMethods' => $paymentMethods,
            'expenseCategories' => $expenseCategories,
            'products' => Product::where('company_id', Auth::user()->company_id)->get(),
            'invoiceItems' => InvoiceItem::where('invoice_id', $invoice->id)->get(),
        ]);
    }

    // Emmagatzemar la nova nota de crèdit i crear un Expense
    public function store(Request $request, Invoice $invoice)
    {

        $request->validate([
            'total_without_tax' => 'required|numeric',
            'tax_amount' => 'required|numeric',
            'total_with_tax' => 'required|numeric',
            'expense_category_id' => 'required|exists:expense_categories,id',
            'payment_method_id' => 'required|exists:payment_methods,id',
            'items' => 'required|array',
        ]);


        // Crear la nota de crèdit
        $creditNote = CreditNote::create([
            'invoice_id' => $invoice->id,
            'total_without_tax' => $request->total_without_tax,
            'tax_amount' => $request->tax_amount,
            'total_with_tax' => $request->total_with_tax,
        ]);

        // Crear els items de la nota de crèdit
        foreach ($request->items as $item) {
            CreditNoteItem::create([
                'credit_note_id' => $creditNote->id,
                'product_id' => $item['product_id'],
                'quantity' => $item['quantity'],
                'unit_price' => $item['unit_price'],
                'total_amount' => $item['total'],
            ]);
        }

        // Crear un Expense per a la nota de crèdit
        Expense::create([
            'name' => 'Credit Note: ' . $creditNote->id,
            'description' => 'Expense generated by Credit Note for Invoice #' . $invoice->id,
            'amount' => $creditNote->total_with_tax,
            'iva' => $invoice->iva,
            'date' => now(),
            'payment_method_id' => $request->payment_method_id,
            'expense_category_id' => $request->expense_category_id,
            'company_id' => Auth::user()->company_id,
            'external_id' => 'CN-' . $creditNote->id,
            'file' => null, // Assuming no file is provided
        ]);

        return Inertia::location(route('invoices.show', $invoice->id));
    }

    // Editar la nota de crèdit
    public function edit(CreditNote $creditNote)
    {
        // Obtener los métodos de pago y las categorías de gastos para el formulario de edición
        $paymentMethods = PaymentMethod::all();
        $expenseCategories = ExpenseCategory::all();
        $invoice = Invoice::findOrFail($creditNote->invoice_id);
        $invoiceItems= InvoiceItem::where('invoice_id',$invoice->id)->get();

        return Inertia::render('CreditNotes/Edit', [
            'creditNote' => $creditNote,
            'invoice'=> $invoice,
            'invoiceItems'=>$invoiceItems,
            'expense'=> Expense::where('external_id', 'CN-' . $creditNote->id)->first(),
            'paymentMethods' => $paymentMethods,
            'expenseCategories' => $expenseCategories,
            'products' => Product::where('company_id', Auth::user()->company_id)->get(),
            'items' => CreditNoteItem::where('credit_note_id', $creditNote->id)->get(),

        ]);
    }

    // Actualitzar la nota de crèdit
    public function update(Request $request, CreditNote $creditNote)
    {

        $request->validate([
            'tax_amount' => 'required|numeric',
            'total_with_tax' => 'required|numeric',
            'total_without_tax' => 'required|numeric',
            'expense_category_id' => 'required|exists:expense_categories,id',
            'payment_method_id' => 'required|exists:payment_methods,id',
            'items' => 'required|array',



        ]);


        $creditNote->update([
            'total_without_tax' => $request->total_without_tax,
            'tax_amount' => $request->tax_amount,
            'total_with_tax' => $request->total_with_tax,
        ]);




        // Actualizar els items de la nota de crèdit si és necessari
        foreach ($request->items as $item) {
            $existingItem = CreditNoteItem::find($item['id']);
            if ($existingItem) {
                $existingItem->update([
                    'product_id' => $item['product_id'],
                    'quantity' => $item['quantity'],
                    'unit_price' => $item['unit_price'],
                    'total_amount' => $item['total_amount'],
                ]);
            }
        }

        // Actualitzar l'Expense relacionat
        $expense = Expense::where('external_id', 'CN-' . $creditNote->id)->first();
        if ($expense) {
            $expense->update([
                'amount' => $creditNote->total_with_tax,
                'iva' => $expense->iva,
                'payment_method_id' => $request->payment_method_id,
                'expense_category_id' => $request->expense_category_id,
            ]);
        }

        return Inertia::location(route('invoices.show', $creditNote->invoice_id));
    }

    // Eliminar la nota de crèdit
    public function destroy(CreditNote $creditNote)
    {
        // Eliminar l'Expense associat
        $expense = Expense::where('external_id', 'CN-' . $creditNote->id)->first();
        if ($expense) {
            $expense->delete();
        }

        // Eliminar els items de la nota de crèdit
        $creditNote->creditNoteItems()->delete();

        // Eliminar la nota de crèdit
        $creditNote->delete();

        return redirect()->route('invoices.show', $creditNote->invoice_id);
    }
}

